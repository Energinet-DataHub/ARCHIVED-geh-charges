/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Charge link Domain related messages.
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

option csharp_namespace = "GreenEnergyHub.Charges.Infrastructure.Internal.ChargeCommandRejected";

message ChargeCommandRejectedContract {
  google.protobuf.Timestamp published_time = 1;
  ChargeCommandContract command = 2;
  repeated ValidationRuleIdentifierContract failed_validation_rule_identifiers = 4;
}

message ChargeCommandContract {
  DocumentContract document = 1;
  ChargeOperationContract charge_operation = 2;
}

message DocumentContract {
  string id = 1; // An identifier for the charge link event. Provided by the Market Participant. Uniqueness cannot be guaranteed
  google.protobuf.Timestamp request_date = 2; // The datetime of when the request was received by GEH
  DocumentTypeContract type = 3; // The document type indicates the intended business context of this business message.
  google.protobuf.Timestamp created_date_time = 4; // A datetime created by external actors and mostly used for support
  MarketParticipantContract sender = 5; // A market participant, e.g. a Grid Access Provider, whom may submit a charge link message.
  MarketParticipantContract recipient = 6; // A market participant, e.g. Metering Point Administrator, whom may receive a charge link message.
  IndustryClassificationContract industry_classification = 7; // IndustryClassification indicates the industry context. E.g. if a Charge price list is related to electricity.
  BusinessReasonCodeContract business_reason_code = 8; // BusinessReasonCode indicates the intended business context.
}

message MarketParticipantContract {
  string id = 1; // Contains an ID that identifies the Market Participants. In Denmark this would be the GLN number or EIC code.
  MarketParticipantRoleContract BusinessProcessRole = 2;  // Contains the role a market participant uses when initiating and communicating with Green Energy Hub
}

message ChargeOperationContract {
  string id = 1; // Contains a ID for the specific link, provided by the sender. Combined with sender.id it becomes unique.
  string charge_id = 2; // A charge identifier. Combined with Charge Owner and Charge Type it becomes unique
  ChargeTypeContract type = 3; // The type of charge; tariff, fee or subscription
  string charge_name = 4; // The charge name, Example: "Elafgift"
  string charge_description = 5; //
  google.protobuf.Timestamp start_date_time = 6; // In UTC. The charge link period's valid from date and time
  google.protobuf.Timestamp end_date_time = 7; // In UTC. The charge link period's valid to date and time. The default value will be the equivalent to 9999-12-31T23:59:59Z without milliseconds
  VatClassificationContract vat_classification = 8;
  bool transparent_invoicing = 9; // In Denmark the Energy Supplier invoices the customer, including the charges from the Grid Access Provider and the System Operator. This boolean can be use to indicate that a charge must be visible on the invoice sent to the customer.
  bool tax_indicator = 10; // Indicates whether the Charge is tax or not.
  string charge_owner = 11; // A charge owner identification, e.g. the Market Participant's GLN or EIC number
  ResolutionContract resolution = 12;
  repeated PointContract points = 13;
}

message PointContract
{
  int32 position = 1; // The position of the price in the price list it was delivered.
  double price = 2;
  google.protobuf.Timestamp time = 3; // A point in time, where the price applies.
}

enum ValidationRuleIdentifierContract
{
  VRI_Unknown = 0;
  VRI_Start_Date_Validation = 1;
  VRI_Changing_Tariff_Vat_Value_Not_Allowed = 2;
  VRI_Changing_Tariff_Tax_Value_Not_Allowed = 3;
  VRI_Process_Type_Is_Known_Validation = 4;
  VRI_Sender_Is_Mandatory_Type_Validation = 5;
  VRI_Recipient_Is_Mandatory_Type_Validation = 6;
  VRI_CHARGE_OPERATION_ID_REQUIRED = 7;
  VRI_OPERATION_TYPE_VALIDATION = 8;
  VRI_CHARGE_ID_LENGTH_VALIDATION = 9;
  VRI_CHARGE_ID_REQUIRED_VALIDATION = 10;
  VRI_DOCUMENT_TYPE_MUST_BE_REQUEST_UPDATE_CHARGE_INFORMATION = 11;
  VRI_BUSINESS_REASON_CODE_MUST_BE_UPDATE_CHARGE_INFORMATION = 12;
  VRI_CHARGE_TYPE_IS_KNOWN_VALIDATION = 13;
  VRI_VAT_CLASSIFICATION_VALIDATION = 14;
  VRI_RESOLUTION_TARIFF_VALIDATION = 15;
  VRI_RESOLUTION_FEE_VALIDATION = 16;
  VRI_RESOLUTION_SUBSCRIPTION_VALIDATION = 17;
  VRI_START_DATE_TIME_REQUIRED_VALIDATION = 18;
  VRI_CHARGE_OWNER_IS_REQUIRED_VALIDATION = 19;
  VRI_CHARGE_NAME_HAS_MAXIMUM_LENGTH = 20;
  VRI_CHARGE_DESCRIPTION_HAS_MAXIMUM_LENGTH = 21;
  VRI_CHARGE_TYPE_TARIFF_PRICE_COUNT = 22;
  VRI_MAXIMUM_PRICE = 23;
  VRI_CHARGE_PRICE_MAXIMUM_DIGITS_AND_DECIMALS = 24;
  VRI_FEE_MUST_HAVE_SINGLE_PRICE = 25;
  VRI_SUBSCRIPTION_MUST_HAVE_SINGLE_PRICE = 26;
  VRI_COMMAND_SENDER_MUST_BE_AN_EXISTING_MARKET_PARTICIPANT = 27;
  VRI_UPDATE_NOT_YET_SUPPORTED = 28;
  VRI_METERING_POINT_DOES_NOT_EXIST_VALIDATION = 29;
  VRI_CHARGE_DOES_NOT_EXIST_VALIDATION = 30;
}

enum ResolutionContract
{
  R_UNKNOWN = 0;
  R_PT15m = 1;
  R_PT1H = 2;
  R_P1D = 3;
  R_P1M = 4;
}

enum VatClassificationContract
{
  VT_UNKNOWN = 0;
  VT_NO_VAT = 1;
  VT_VAT_25 = 2;
}

enum DocumentTypeContract
{
  DT_UNKNOWN = 0;
  DT_REQUEST_CHANGE_BILLING_MASTER_DATA = 1;
  DT_REQUEST_UPDATE_CHARGE_INFORMATION = 2;
}

enum MarketParticipantRoleContract
{
  MPR_UNKNOWN = 0;
  MPR_ENERGY_SUPPLIER = 1;
  MPR_GRID_ACCESS_PROVIDER = 2;
  MPR_SYSTEM_OPERATOR = 3;
  MPR_METERED_DATA_RESPONSIBLE = 4;
  MPR_ENERGY_AGENCY = 5;
  MPR_METERED_DATA_ADMINISTRATOR = 6;
  MPR_METERING_POINT_ADMINISTRATOR = 7;
}

enum IndustryClassificationContract {
  IC_UNKNOWN = 0;
  IC_ELECTRICITY = 1;
}

enum BusinessReasonCodeContract {
  BRC_UNKNOWN = 0;
  BRC_UPDATE_MASTER_DATA_SETTLEMENT = 1;
  BRC_UPDATE_CHARGE_INFORMATION = 2;
}

enum ChargeTypeContract {
  CT_UNKNOWN = 0;
  CT_SUBSCRIPTION = 1;
  CT_FEE = 2;
  CT_TARIFF = 3;
}