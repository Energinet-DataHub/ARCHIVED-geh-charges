/* Copyright 2020 Energinet DataHub A/S
 *
 * Licensed under the Apache License, Version 2.0 (the "License2");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
* Reply to be sent by the Charges domain to the Metering Point domain once the request has been processed.
*
* Expected reply meta data besides what ADR-0008 already requires for integration events:
* https://github.com/Energinet-DataHub/green-energy-hub/blob/main/docs/architecture-decision-record/ADR-0008%20Integration%20events.md#message-metadata
* 
* ReplyId 
* OriginalRequestId - Generated by sending domain - UUID for the request. Will be applied to the reply message's meta data for tracing
* ProcessId - Generated by sending domain - UUID for the 'create metering point process'
*/

syntax = "proto3";

option csharp_namespace = "GreenEnergyHub.Charges.Infrastructure.Integration.CreateChargeLinksReply";

message CreateChargeLinksReply 
  string metering_point_id = 1; // The metering point to link default charges to.
  bool status = 2; // Operation result: 0 = success, 1 = failed
  bool links_added = 2; // 0 = added, 1 = not
  int error_code = 3; // 0 = no error, do we want some generic codes, e.g. 1 = Metering Point Unknown.
}

/* 
* So if status = 0, links = 0 and error code = 0, then the request was succesfully processed but no links were added, 
* e.g. because no default charges exist for the metering point type
*/