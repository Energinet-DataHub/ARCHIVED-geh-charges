# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Continuous Integration of domain except for own NuGet packages
name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  # Markdown, links and spell checking
  ci_base:
    uses: Energinet-DataHub/.github/.github/workflows/ci-base.yml@v8

  # Build all projects within solution
  dotnet_solution_ci_build:
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-build.yml@v8
    with:
      SOLUTION_FILE_PATH: 'source/GreenEnergyHub.Charges/GreenEnergyHub.Charges.sln'

  # Run tests in 'IntegrationTests.dll' within the class 'ChargeIngestionTests'
  dotnet_solution_ci_test_integrationtests_part1:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\GreenEnergyHub.Charges\source\GreenEnergyHub.Charges.IntegrationTests\bin\Release\net6.0\GreenEnergyHub.Charges.IntegrationTests.dll'
      TESTS_FILTER_EXPRESSION: 'FullyQualifiedName~ChargeIngestionTests'
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_NAME: ASPNETCORE_TEST_CONTENTROOT_GREENENERGYHUB_CHARGES_WEBAPI
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_VALUE: '\tests\source\GreenEnergyHub.Charges\source\GreenEnergyHub.Charges.WebApi'
      USE_AZURE_FUNCTIONS_TOOLS: true
      CODE_COVERAGE_FLAGS: business
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_SECRETS_KEYVAULT_URL: ${{ secrets.AZURE_SECRETS_KEYVAULT_URL }}

  # Run tests in 'IntegrationTests.dll' NOT within the class 'ChargeIngestionTests'
  dotnet_solution_ci_test_integrationtests_part2:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\GreenEnergyHub.Charges\source\GreenEnergyHub.Charges.IntegrationTests\bin\Release\net6.0\GreenEnergyHub.Charges.IntegrationTests.dll'
      TESTS_FILTER_EXPRESSION: 'FullyQualifiedName!~ChargeIngestionTests'
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_NAME: ASPNETCORE_TEST_CONTENTROOT_GREENENERGYHUB_CHARGES_WEBAPI
      ASPNETCORE_TEST_CONTENTROOT_VARIABLE_VALUE: '\tests\source\GreenEnergyHub.Charges\source\GreenEnergyHub.Charges.WebApi'
      USE_AZURE_FUNCTIONS_TOOLS: true
      CODE_COVERAGE_FLAGS: business
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}
      AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}
      AZURE_SECRETS_KEYVAULT_URL: ${{ secrets.AZURE_SECRETS_KEYVAULT_URL }}

  # Run all tests in 'Tests.dll'
  dotnet_solution_ci_test_tests:
    needs: [dotnet_solution_ci_build]
    uses: Energinet-DataHub/.github/.github/workflows/dotnet-solution-ci-test.yml@v8
    with:
      TESTS_DLL_FILE_PATH: '\tests\source\GreenEnergyHub.Charges\source\GreenEnergyHub.Charges.Tests\bin\Release\net6.0\GreenEnergyHub.Charges.Tests.dll'
      USE_AZURE_FUNCTIONS_TOOLS: false
    secrets:
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID_OIDC }}

  terraform_validate:
    uses: Energinet-DataHub/.github/.github/workflows/terraform-validate.yml@v8
    with:
      TERRAFORM_WORKING_DIR_PATH: './build/infrastructure/main'
      TERRAFORM_VERSION: '1.2.2'

  # Create pre-release that might eventually be deployed in CD pipeline
  create_prerelease:
    needs: [
      ci_base,
      terraform_validate,
      dotnet_solution_ci_build,
      dotnet_solution_ci_test_integrationtests_part1,
      dotnet_solution_ci_test_integrationtests_part2,
      dotnet_solution_ci_test_tests
    ]
    uses: Energinet-DataHub/.github/.github/workflows/create-prerelease.yml@v8
    with:
      CALLER_REPOSITORY_PATH: Energinet-DataHub/geh-charges
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
