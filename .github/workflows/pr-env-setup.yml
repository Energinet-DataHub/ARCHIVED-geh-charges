# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: PR Environment - Setup

on:
  pull_request:
    branches:
      - main
    paths:
      - build/infrastructure
      - .github/workflows/pr-env-setup.yml
  workflow_dispatch: {}
env:
  ORGANISATION_NAME: endk
  PROJECT_NAME: 'cha${{ github.event.number }}'
  RESOURCE_GROUP_NAME: Pull_Requests
  ENVIRONMENT_NAME: Development
  ENVIRONMENT_SHORT: u
  ENVIRONMENT_LONG: Pull_Requests
  INTEGRATION_TEST_CSPROJ_FILE_PATH: 'source/GreenEnergyHub.Charges/source/GreenEnergyHub.Charges.IntegrationTests/GreenEnergyHub.Charges.IntegrationTests.csproj'
  INTEGRATION_TEST_DLL: GreenEnergyHub.Charges.IntegrationTests.dll
  DEFAULT_LOCATION: "westeurope"
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_SECRET: ${{ secrets.SPN_SECRET }}
  CLIENT_ID: ${{ secrets.SPN_ID }}
  CLIENT_OBJECT_ID: ${{ secrets.SPN_SECRET }}
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}

jobs:
  infra_deploy:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    environment:
      name: Pull_Requests # Unfortunately this is not currently supported: ${{ env.ENVIRONMENT_LONG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Environment Secrets
        run: |  
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=${{ secrets.SPN_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_OBJECT_ID=${{ secrets.SPN_OBJECT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.SPN_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_wrapper: false

      - name: Set Custom TF Vars
        shell: bash
        run: |
          echo "TF_VAR_sharedresources_keyvault_name=${{ secrets.AZURE_KV_NAME_SHARED }}" >> $GITHUB_ENV
          echo "TF_VAR_sharedresources_resource_group_name=${{ secrets.AZURE_RG_NAME_SHARED }}" >> $GITHUB_ENV
      
      - name: Terraform CD
        id: terraform-action
        uses: Energinet-DataHub/.github/.github/actions/terraform@main
        with:
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          ORGANISATION_NAME: ${{ secrets.ORGANISATION_NAME }}
          ENVIRONMENT_SHORT: pr
          ENVIRONMENT_NAME: prtest
          TERRAFORM_BACKEND_FILE_PATH: ${{ env.TERRAFORM_BACKEND_FILE_PATH }}
          TERRAFORM_WORKING_DIR_PATH: ${{ env.TERRAFORM_WORKING_DIR_PATH }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SPN_ID: ${{ secrets.AZURE_SPN_ID }}
          AZURE_SPN_OBJECT_ID: ${{ secrets.AZURE_SPN_OBJECT_ID }}
          AZURE_SPN_SECRET: ${{ secrets.AZURE_SPN_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RG_NAME: ${{ secrets.AZURE_RG_NAME }}

      - name: comment PR
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Congratulations! Your enviroment was successfully deployed into Pull_Requests (Resources will contain the name ${{ env.PROJECT_NAME }}). It will automatically be destroyed again when the PR is closed."
          check_for_duplicate_msg: true  # OPTIONAL
