# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: FunctionHost CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

env:
  CSPROJ_FILE_PATH: source/GreenEnergyHub.Charges/source/GreenEnergyHub.Charges.FunctionHost/GreenEnergyHub.Charges.FunctionHost.csproj
  TEST_CSPROJ_FILE_PATH: source/GreenEnergyHub.Charges/source/GreenEnergyHub.FunctionApp.TestCommon.Tests/GreenEnergyHub.FunctionApp.TestCommon.Tests.csproj
  SOLUTION_FILE_PATH: source/GreenEnergyHub.Charges/GreenEnergyHub.Charges.sln
  DOTNET_VERSION: '5.0.202'
  AZURITE_VERSION: '3.14.0'
  AZURE_FUNCTIONS_CORE_TOOLS_VERSION: '3.0.3568'  
  # Variables that overrides settings in 'functionhost.settings.json'
  DotnetExecutablePath: ''
  FunctionAppHostPath: ''
  FunctionApplicationPath: ''

jobs:
  pre_job:
    runs-on: windows-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Should skip?
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v1.4.0
        with:
          github_token: ${{ github.token }}
          paths: '[
            "source/GreenEnergyHub.Charges/**",
            ".github/workflows/link-receiver-ci.yml",
            ".github/actions/dotnet-build-and-test/**",
            ".github/actions/azure-core-tools-install/**"
          ]'

  validate_build_functionhost:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Validate build FunctionHost
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master # UNDONE: Why do we use version 'master' instead of a version tag? Using a branch is fragile.

      - name: Setup .NET 3.1 environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Azurite v${{ env.AZURITE_VERSION }}
        run: npm install -g azurite@${{ env.AZURITE_VERSION }}

      # - name: Install Azure Functions Core Tools v${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}
      #   run: npm install -g azure-functions-core-tools@${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}

      # TODO: Remove when integration tests are working
      # - name: Test Azurite
      #   if: ${{ success() || failure() }}
      #   run: azurite --version

      # TODO: Remove when integration tests are working
      # - name: Test Azure Functions Core Tools
      #   if: ${{ success() || failure() }}
      #   run: func --version

      - name: test and publish report
        shell: pwsh
        run: |
          dotnet test ${{ env.TEST_CSPROJ_FILE_PATH }} --filter "Category=UnitTest" -p:CollectCoverage=true -p:CoverletOutput=${{ github.workspace }}/output/ -p:CoverletOutputFormat=cobertura -p:Threshold=0
        env:
          # Variables necessary to manage Azure resources for tests (similar to local use of 'integrationtest.local.settings.json')
          SUBSCRIPTION_ID: ${{ secrets.XDAST_SUBSCRIPTION_ID }}
          RESOURCE_GROUP_NAME: 'rg-DataHub-IntegrationTest-U'
          DEFAULT_LOCATION: 'westeurope'
          TENANT_ID: ${{ secrets.XDAST_TENANT_ID }}
          CLIENT_ID: ${{ secrets.XDAST_SPN_ID }}
          CLIENT_SECRET: ${{ secrets.XDAST_SPN_SECRET }}  

      # - name: Build and test project
      #   uses: ./.github/actions/dotnet-build-and-test
      #   with:
      #     CSPROJ_FILE_PATH: ${{ env.CSPROJ_FILE_PATH }}
      #     TEST_CSPROJ_FILE_PATH: ${{ env.TEST_CSPROJ_FILE_PATH }}
      #     SOLUTION_FILE_PATH: ${{Â env.SOLUTION_FILE_PATH }}
      #     OUTPUT_PATH: '${{ github.workspace }}/output'

      # - name: Publish artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: drop
      #     path: '${{ github.workspace }}/output'