# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Clients CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

env:
  CSPROJ_FILE_PATH: source/Energinet.Charges.Libraries/source/Energinet.DataHub.Charges.Clients/Energinet.DataHub.Charges.Clients.csproj
  SOLUTION_FILE_PATH: source/Energinet.Charges.Libraries/Energinet.DataHub.Charges.Libraries.sln
  DOTNET_VERSION: '5.0.202'
  AZURITE_VERSION: '3.14.0'
  AZURE_FUNCTIONS_CORE_TOOLS_VERSION: '3.0.3568'
  # Variables necessary to manage Azure resources for tests (similar to local use of 'integrationtest.local.settings.json')
  AZURE_KEYVAULT_URL: ${{ secrets.AZURE_KEYVAULT_URL }}

jobs:
  pre_job:
    runs-on: windows-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Should skip?
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v1.4.0
        with:
          github_token: ${{ github.token }}
          paths: '[
            "source/Energinet.Charges.Libraries/**",
            ".github/workflows/clients-ci.yml",
            ".github/actions/dotnet-build-and-test/**",
            ".github/actions/azure-core-tools-install/**"
          ]'

  validate_build_clients:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Validate build Clients
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Azurite v${{ env.AZURITE_VERSION }}
        run: npm install -g azurite@${{ env.AZURITE_VERSION }}

      - name: Install Azure Functions Core Tools v${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}
        run: npm install -g azure-functions-core-tools@${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}

      - name: Build and test project
        run: |
          az login --service-principal --username "${{ secrets.AZURE_SPN_ID }}" --password "${{ secrets.AZURE_SPN_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
          az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          dotnet test ${{ env.SOLUTION_FILE_PATH }} --configuration Release --verbosity normal --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover --output ${{ github.workspace }}/output
                    
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          fail_ci_if_error: true
          verbose: true
      
      #- name: Build
      #    dotnet build ${{ env.CSPROJ_FILE_PATH }} --configuration Release --output ${{ github.workspace }}/output