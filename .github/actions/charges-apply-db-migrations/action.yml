name: 'Applying charges db migrations'
description: 'Applies migrations to the charges DB (in the shared sql srv) to make sure the DB is up to date.'
inputs:
  sql-connection-string-keyvaultsecretname:
    description: 'Name of the keyvault secret containing the username for the charges sql database'
    required: true
  keyvault-name:
    description: 'Name of the keyvault to retrieve secrets from'    
  environment-name:
    description: 'Environment to apply the migrations to'
    required: true

runs:
  using: "composite"
  steps:
    - name: Obtain keyvault information
      run: |
        keyvault_secret_details=$(az keyvault secret show --name "${{ inputs.sql-connection-string-keyvaultsecretname }}" --vault-name ${{ inputs.keyvault-name }})
        charges_sql_connection_string=$(echo $keyvault_secret_details | python -c "import sys, json; print(json.load(sys.stdin)['value'])")
        echo ::add-mask::$charges_sql_connection_string
        echo "CHARGES_SQL_CONNNECTION_STRING=$charges_sql_connection_string" >> $GITHUB_ENV
      shell: bash
    - name: Setup variable to use test data in certain environments only
      run: |
        if ${{ inputs.environment-name == 'Development' || inputs.environment-name == 'Test' }}
        then
          echo "INCLUDE_TESTDATA=includeTestData" >> $GITHUB_ENV
        fi
      shell: bash
    - run: dotnet run --project source/GreenEnergyHub.Charges/source/GreenEnergyHub.Charges.ApplyDBMigrationsApp/ --configuration Release -- ${{ env.CHARGES_SQL_CONNNECTION_STRING }} includeSeedData ${{ env.INCLUDE_TESTDATA }}
      shell: bash
